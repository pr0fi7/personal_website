version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf 
    depends_on:
      - backend
    networks:
      - mynetwork


  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    networks:
      - mynetwork
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    env_file: .env
    networks:
      - mynetwork
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  mynetwork:
    driver: bridge
